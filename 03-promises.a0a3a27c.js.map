{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAC9BC,EAAQF,SAASC,cAAc,uBAC/BE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAChCI,EAAYL,SAASC,cAAc,UAIzC,SAASK,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,aAAY,WACYC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,G,GAEpBA,E,IAXPH,EAAUW,iBAAiB,QAASV,KAepCD,EAAUW,iBAAiB,SAAS,SAAAC,GAClCA,EAAEC,iBAIF,IAHA,IAAIC,EAAaC,OAAOlB,EAAMmB,OAC1BC,EAAYF,OAAOjB,EAAKkB,OAEnBE,EAAI,EAAGA,EAAInB,EAAOiB,MAAOE,GAAK,EACrCjB,EAAc,EAAIiB,EAAGJ,EAAaG,EAAYC,GAC3CC,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUmB,EAAKD,EAALV,MACjBY,EAAA9B,GAAS+B,OAAOC,QACd,uBAAwCC,OAAfvB,EAAS,QAAYuB,OAANJ,EAAM,M,IAGjDK,OAAM,SAAAN,G,IAAGlB,EAAQkB,EAARlB,SAAUyB,EAAKP,EAALV,MAClBY,EAAA9B,GAAS+B,OAAOK,QACd,sBAAqCH,OAAfvB,EAAS,QAAYuB,OAANE,EAAM,M,IAInDjC,EAAKmC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('form');\nconst delay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst btnSubmit = document.querySelector('button');\n\nbtnSubmit.addEventListener('click', createPromise());\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setInterval(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\nbtnSubmit.addEventListener('click', e => {\n  e.preventDefault();\n  let firstDelay = Number(delay.value);\n  let delayStep = Number(step.value);\n\n  for (let i = 0; i < amount.value; i += 1) {\n    createPromise(1 + i, firstDelay + delayStep * i)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n  }\n  form.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$btnSubmit","$ce04d3a99e08e73b$var$createPromise","position","delay1","Promise","resolve","reject","setInterval","Math","random","delay","addEventListener","e","preventDefault","firstDelay","Number","value","delayStep","i","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure","reset"],"version":3,"file":"03-promises.a0a3a27c.js.map"}